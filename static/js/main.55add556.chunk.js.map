{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Floor","rotation","Math","PI","attach","args","color","Box","size","scale","children","rest","Button","props","useState","hover","setHover","setColor","onSelect","useCallback","random","onChange","Text","position","fontSize","anchorX","anchorY","App","Sky","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAKA,SAASA,IACP,OACE,uBAAMC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAAlC,UACE,qCAAqBC,OAAO,WAAWC,KAAM,CAAC,GAAI,MAClD,sCAAsBD,OAAO,WAAWE,MAAM,YAKpD,SAASC,EAAT,GAAyD,IAA1CD,EAAyC,EAAzCA,MAAOE,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAaC,EAAQ,mDACtD,OACE,+CAAMF,MAAOA,GAAWE,GAAxB,cACE,mCAAmBP,OAAO,WAAWC,KAAMG,IAC3C,mCAAmBJ,OAAO,WAAWE,MAAOA,IAC3CI,MAKP,SAASE,EAAOC,GAAQ,IAAD,EACKC,oBAAS,GADd,mBACdC,EADc,KACPC,EADO,OAEKF,mBAAS,SAFd,mBAEdR,EAFc,KAEPW,EAFO,KAIfC,EAAWC,uBAAY,WAC3BF,EAA0B,SAAhBf,KAAKkB,SAAuB,KACrC,CAACH,IAEJ,OACE,cAAC,IAAD,CAAQC,SAAUA,EAAlB,SACE,cAAC,IAAD,CAAOG,SAAUL,EAAjB,SACE,cAACT,EAAD,yBAAKD,MAAOA,EAAOG,MAAOM,EAAQ,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GAAIP,KAAM,CAAC,GAAK,GAAK,KAAUK,GAA1F,aACE,cAACS,EAAA,EAAD,CAAMC,SAAU,CAAC,EAAG,EAAG,KAAOC,SAAU,IAAMlB,MAAM,OAAOmB,QAAQ,SAASC,QAAQ,SAApF,oCASK,SAASC,IACtB,OACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,IACA,cAAC5B,EAAD,IACA,iCACA,4BAAYuB,SAAU,CAAC,GAAI,GAAI,MAC/B,cAAC,IAAD,IACA,cAACX,EAAD,CAAQW,SAAU,CAAC,EAAG,IAAM,QCrDlC,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.55add556.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { VRCanvas, Hover, Select, DefaultXRControllers } from '@react-three/xr'\nimport { Sky, Text } from '@react-three/drei'\nimport './style/App.css'\n\nfunction Floor() {\n  return (\n    <mesh rotation={[-Math.PI / 2, 0, 0]}>\n      <planeBufferGeometry attach=\"geometry\" args={[40, 40]} />\n      <meshStandardMaterial attach=\"material\" color=\"#666\" />\n    </mesh>\n  )\n}\n\nfunction Box({ color, size, scale, children, ...rest }) {\n  return (\n    <mesh scale={scale} {...rest}>\n      <boxBufferGeometry attach=\"geometry\" args={size} />\n      <meshPhongMaterial attach=\"material\" color={color} />\n      {children}\n    </mesh>\n  )\n}\n\nfunction Button(props) {\n  const [hover, setHover] = useState(false)\n  const [color, setColor] = useState(0x123456)\n\n  const onSelect = useCallback(() => {\n    setColor((Math.random() * 0xffffff) | 0)\n  }, [setColor])\n\n  return (\n    <Select onSelect={onSelect}>\n      <Hover onChange={setHover}>\n        <Box color={color} scale={hover ? [1.5, 1.5, 1.5] : [1, 1, 1]} size={[0.4, 0.1, 0.1]} {...props}>\n          <Text position={[0, 0, 0.06]} fontSize={0.05} color=\"#000\" anchorX=\"center\" anchorY=\"middle\">\n            Hello react-xr!\n          </Text>\n        </Box>\n      </Hover>\n    </Select>\n  )\n}\n\nexport default function App() {\n  return (\n    <VRCanvas>\n      <Sky />\n      <Floor />\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <DefaultXRControllers />\n      <Button position={[0, 0.8, -1]} />\n    </VRCanvas>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}